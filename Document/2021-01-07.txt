Date: 07-01-2021

Today, I mainly focused in branch, merge and command related to remote(github) server. I also
practiced commands that I leanred last day to get into more details.

---> Following are the overview of the commands I learned and practiced today. 

(1) To get information in changes in file in commit phases 

     (i) git log –p: 

     ---> It gives all the change in lines in the file 

     (ii) git show [Commit id] 

     ---> It shows the associated patches in current commit. 

     (iii) git log –stat 

     ---> To show the overall information regarding how many lines were added, modifies or removed.  

     (iv) git commit –amend 

     ---> If we want to add new file or do any other changes that we want to add in recent commit, we write this
          command. This will open the default text editor where we can also edit the commit message. So, this is                          
          basically used to overwrite the previous commit.       

(2) git rm [file-name] (To remove or delete the file) 

(3) git mv [file-1] [New name for file -1] (To move the file from one place to another or to rename the file) 

(4)  echo [file we want to ignore] > .gitignore file: this file is used to ignore the file we do not want to 
                                                      track. 

(5) Branches: 

      ---> Create branches: git branch new-branch 

      ---> Switch to another branch: git checkout [Branch-name] 

      ---> git checkout –b [new-branch] : To create new branch and switch to that branch 

      ---> git branch –d [branch-name]: To delete the mentioned branch 

(6) Merge: 

      ---> git merge [branch]: To merge the branch 

      ---> git merge –abort : When there is a branch conflict (this happens when we edit data in same place in different
 	                      branches), We use this command to abort the merge action. 

      ---> git log –graph –oneline: This command is used to show the summarized view of the commit history in a
 			            repository. 

(7) To ignore patterns: 

      ---> logs/ , *.notes , pattern*/: This command is used to save the file with desired pattern as when we want to 
	                                add files in .gitignore it is good to have a specific pattern for file. 

      ---> git config –global core.execludesfile [file]: This shows the pattern in all the local repositories that is
                                                         needed to be ignored. 
 
(8) To rewrite History: 

      ---> git rebase [branch]: this command is used to apply commits of recent branch ahead of specified one. 

      ---> git reset –hard [commit]: this command is used to clear the staging area and it rewrites working tree from 
                                     mentioned commit.  

 

  

    

 

 